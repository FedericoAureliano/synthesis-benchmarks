(set-logic ALL)
(synth-fun synth_h ((x Int) (y Int)) Bool)
(declare-var initial_5_a Int)
(declare-var initial_6_b Int)
(declare-var state_1_a Int)
(declare-var state_1_b Int)
(constraint (not (or (and  (not (<= state_1_a state_1_b)) (= state_1_b (+ initial_5_a initial_6_b)) (= state_1_a initial_6_b) (<= initial_5_a initial_6_b) (synth_h initial_5_a initial_6_b) )	
(and  (not (synth_h state_1_a state_1_b)) (= state_1_b (+ initial_5_a initial_6_b)) (= state_1_a initial_6_b) (<= initial_5_a initial_6_b) (synth_h initial_5_a initial_6_b) )	
(and  (not (<= 0 1)) )	
(and  (not (synth_h 0 1)) ))))
(check-synth)
